// JVMInstPrinter.h - Print jvm MCInst to assembly syntax -*- C++ -*-//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
///
/// \file
/// \brief This class prints an JVM MCInst to jvm file syntax.
///
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_JVM_INSTPRINTER_JVMINSTPRINTER_H
#define LLVM_LIB_TARGET_JVM_INSTPRINTER_JVMINSTPRINTER_H

#include "llvm/ADT/SmallVector.h"
#include "llvm/CodeGen/MachineValueType.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class MCSubtargetInfo;

class JVMInstPrinter final : public MCInstPrinter {
public:
  using DescriptorVec = SmallVector<StringRef, 8>;

  JVMInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                 const MCRegisterInfo &MRI);

  void printInst(const MCInst *MI, raw_ostream &OS, StringRef Annot,
                 const MCSubtargetInfo &STI) override;

  void printJVMDescriptorOperand(const MCInst *MI, unsigned OpNo,
                                 raw_ostream &O);

  // Used by tblegen code.
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);

  void SetFunctionInfo(void *FI) override { DescVec = (DescriptorVec *)FI; }

private:
  DescriptorVec *DescVec;
};

namespace JVM {} // end namespace JVM
} // end namespace llvm

#endif
