; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=jvm32-unknown-unknown | FileCheck %s --check-prefix=JVM -match-full-lines

%struct.S1 = type { i32, %struct.S2 }
%struct.S2 = type { [10 x i32] }

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @test1(%struct.S1* byval align 8 %obj, i32 %i) #0 {
; JVM:       aload 0
; JVM-NEXT:    getfield AoCClass1/f1 LAoCClass2;
; JVM-NEXT:    getfield AoCClass2/f0 [I
; JVM-NEXT:    bipush 5
; JVM-NEXT:    iload 1
; JVM-NEXT:    iastore
; JVM-NEXT:    aload 0
; JVM-NEXT:    getfield AoCClass1/f1 LAoCClass2;
; JVM-NEXT:    getfield AoCClass2/f0 [I
; JVM-NEXT:    bipush 5
; JVM-NEXT:    iaload
; JVM-NEXT:    istore 2
; JVM-NEXT:    iload 2
; JVM-NEXT:    ldc 10
; JVM-NEXT:    iadd
; JVM-NEXT:    istore 3
; JVM-NEXT:    iload 3
; JVM-NEXT:    ireturn
entry:
  %f2 = getelementptr inbounds %struct.S1, %struct.S1* %obj, i32 0, i32 1
  %f1 = getelementptr inbounds %struct.S2, %struct.S2* %f2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %f1, i64 0, i64 5
  store i32 %i, i32* %arrayidx, align 4
  %f21 = getelementptr inbounds %struct.S1, %struct.S1* %obj, i32 0, i32 1
  %f12 = getelementptr inbounds %struct.S2, %struct.S2* %f21, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [10 x i32], [10 x i32]* %f12, i64 0, i64 5
  %0 = load i32, i32* %arrayidx3, align 4
  %add = add nsw i32 %0, 10
  ret i32 %add
}
attributes #0 = { noinline nounwind uwtable}
