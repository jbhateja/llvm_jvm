; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py

; RUN: llc < %s -mtriple=jvm32-unknown-unknown -jvm-candidate-checker | FileCheck %s --check-prefix=JVM -match-full-lines

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @getVal() #0 {
; JVM:       iconst_2
; JVM-NEXT:    newarray byte
; JVM-NEXT:    astore 1
; JVM-NEXT:    aload 1
; JVM-NEXT:    bipush 0
; JVM-NEXT:    ldc 1
; JVM-NEXT:    bastore
; JVM-NEXT:    aload 1
; JVM-NEXT:    bipush 1
; JVM-NEXT:    ldc 1
; JVM-NEXT:    bastore
; JVM-NEXT:    aload 1
; JVM-NEXT:    bipush 0
; JVM-NEXT:    baload
; JVM-NEXT:    istore 2
; JVM-NEXT:    iload 2
; JVM-NEXT:    aload 1
; JVM-NEXT:    bipush 1
; JVM-NEXT:    baload
; JVM-NEXT:    istore 3
; JVM-NEXT:    iload 3
; JVM-NEXT:    lstore 4
; JVM-NEXT:    lload 4
; JVM-NEXT:    ldc 8
; JVM-NEXT:    lshl
; JVM-NEXT:    lstore 6
; JVM-NEXT:    lstore 8
; JVM-NEXT:    lload 8
; JVM-NEXT:    lload 6
; JVM-NEXT:    lor
; JVM-NEXT:    lstore 10
; JVM-NEXT:    lload 10
; JVM-NEXT:    lreturn
entry:
  %carr = alloca [2 x i8], align 1
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %carr, i64 0, i64 0
  store i8 1, i8* %arrayidx, align 1
  %arrayidx1 = getelementptr inbounds [2 x i8], [2 x i8]* %carr, i64 0, i64 1
  store i8 1, i8* %arrayidx1, align 1
  %arrayidx2 = getelementptr inbounds [2 x i8], [2 x i8]* %carr, i64 0, i64 0
  %0 = load i8, i8* %arrayidx2, align 1
  %conv = sext i8 %0 to i64
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %carr, i64 0, i64 1
  %1 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %1 to i64
  %shl = shl i64 %conv4, 8
  %or = or i64 %conv, %shl
  ret i64 %or
}
attributes #0 = { noinline nounwind uwtable}
