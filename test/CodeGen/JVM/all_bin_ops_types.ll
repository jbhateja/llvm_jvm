; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py

; RUN: llc < %s -mtriple=jvm32-unknown-unknown -jvm-candidate-checker | FileCheck %s --check-prefix=JVM -match-full-lines

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_Z5BinOpIiET_iS0_S0_(i32 %Opcode, i32 %arg1, i32 %arg2) #0  {
; JVM:       iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpgt LBB0_14
; JVM-NEXT:    goto LBB0_13
; JVM-NEXT:  LBB0_13:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpgt LBB0_21
; JVM-NEXT:    goto LBB0_20
; JVM-NEXT:  LBB0_20:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_0
; JVM-NEXT:    if_icmpeq LBB0_1
; JVM-NEXT:    goto LBB0_24
; JVM-NEXT:  LBB0_24:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpeq LBB0_3
; JVM-NEXT:    goto LBB0_11
; JVM-NEXT:  LBB0_21:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_2
; JVM-NEXT:    if_icmpeq LBB0_2
; JVM-NEXT:    goto LBB0_22
; JVM-NEXT:  LBB0_22:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_3
; JVM-NEXT:    if_icmpeq LBB0_4
; JVM-NEXT:    goto LBB0_23
; JVM-NEXT:  LBB0_23:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpeq LBB0_5
; JVM-NEXT:    goto LBB0_11
; JVM-NEXT:  LBB0_14:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpgt LBB0_16
; JVM-NEXT:    goto LBB0_15
; JVM-NEXT:  LBB0_15:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_5
; JVM-NEXT:    if_icmpeq LBB0_8
; JVM-NEXT:    goto LBB0_19
; JVM-NEXT:  LBB0_19:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpeq LBB0_6
; JVM-NEXT:    goto LBB0_11
; JVM-NEXT:  LBB0_16:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 7
; JVM-NEXT:    if_icmpeq LBB0_7
; JVM-NEXT:    goto LBB0_17
; JVM-NEXT:  LBB0_17:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 8
; JVM-NEXT:    if_icmpeq LBB0_9
; JVM-NEXT:    goto LBB0_18
; JVM-NEXT:  LBB0_18:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 9
; JVM-NEXT:    if_icmpeq LBB0_10
; JVM-NEXT:    goto LBB0_11
; JVM-NEXT:  LBB0_1:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    iadd
; JVM-NEXT:    istore 14
; JVM-NEXT:    iload 14
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_2:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    imul
; JVM-NEXT:    istore 12
; JVM-NEXT:    iload 12
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_3:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    isub
; JVM-NEXT:    istore 13
; JVM-NEXT:    iload 13
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_4:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    idiv
; JVM-NEXT:    istore 11
; JVM-NEXT:    iload 11
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_5:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    irem
; JVM-NEXT:    istore 10
; JVM-NEXT:    iload 10
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_6:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    ior
; JVM-NEXT:    istore 7
; JVM-NEXT:    iload 7
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_7:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    ixor
; JVM-NEXT:    istore 6
; JVM-NEXT:    iload 6
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_8:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    iand
; JVM-NEXT:    istore 8
; JVM-NEXT:    iload 8
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_9:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    ishr
; JVM-NEXT:    istore 5
; JVM-NEXT:    iload 5
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_10:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    ishl
; JVM-NEXT:    istore 3
; JVM-NEXT:    iload 3
; JVM-NEXT:    istore 4
; JVM-NEXT:    goto LBB0_12
; JVM-NEXT:  LBB0_11:
; JVM-NEXT:    ldc 0
; JVM-NEXT:    istore 4
; JVM-NEXT:  LBB0_12:
; JVM-NEXT:    iload 4
; JVM-NEXT:    istore 9
; JVM-NEXT:    iload 9
; JVM-NEXT:    ireturn
entry:
  switch i32 %Opcode, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
    i32 1, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 6, label %sw.bb5
    i32 7, label %sw.bb6
    i32 5, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb9
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i32 %arg1, %arg2
  br label %return

sw.bb1:                                           ; preds = %entry
  %mul = mul nsw i32 %arg1, %arg2
  br label %return

sw.bb2:                                           ; preds = %entry
  %sub = sub nsw i32 %arg1, %arg2
  br label %return

sw.bb3:                                           ; preds = %entry
  %div = sdiv i32 %arg1, %arg2
  br label %return

sw.bb4:                                           ; preds = %entry
  %rem = srem i32 %arg1, %arg2
  br label %return

sw.bb5:                                           ; preds = %entry
  %or = or i32 %arg1, %arg2
  br label %return

sw.bb6:                                           ; preds = %entry
  %xor = xor i32 %arg1, %arg2
  br label %return

sw.bb7:                                           ; preds = %entry
  %and = and i32 %arg1, %arg2
  br label %return

sw.bb8:                                           ; preds = %entry
  %shr = ashr i32 %arg1, %arg2
  br label %return

sw.bb9:                                           ; preds = %entry
  %shl = shl i32 %arg1, %arg2
  br label %return

sw.epilog:                                        ; preds = %entry
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ %shl, %sw.bb9 ], [ %shr, %sw.bb8 ], [ %and, %sw.bb7 ], [ %xor, %sw.bb6 ], [ %or, %sw.bb5 ], [ %rem, %sw.bb4 ], [ %div, %sw.bb3 ], [ %sub, %sw.bb2 ], [ %mul, %sw.bb1 ], [ %add, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local signext i16 @_Z5BinOpIsET_iS0_S0_(i32 %Opcode, i16 signext %arg1, i16 signext %arg2) #0  {
; JVM:       iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpgt LBB1_14
; JVM-NEXT:    goto LBB1_13
; JVM-NEXT:  LBB1_13:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpgt LBB1_21
; JVM-NEXT:    goto LBB1_20
; JVM-NEXT:  LBB1_20:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_0
; JVM-NEXT:    if_icmpeq LBB1_1
; JVM-NEXT:    goto LBB1_24
; JVM-NEXT:  LBB1_24:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpeq LBB1_3
; JVM-NEXT:    goto LBB1_11
; JVM-NEXT:  LBB1_21:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_2
; JVM-NEXT:    if_icmpeq LBB1_2
; JVM-NEXT:    goto LBB1_22
; JVM-NEXT:  LBB1_22:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_3
; JVM-NEXT:    if_icmpeq LBB1_4
; JVM-NEXT:    goto LBB1_23
; JVM-NEXT:  LBB1_23:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpeq LBB1_5
; JVM-NEXT:    goto LBB1_11
; JVM-NEXT:  LBB1_14:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpgt LBB1_16
; JVM-NEXT:    goto LBB1_15
; JVM-NEXT:  LBB1_15:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_5
; JVM-NEXT:    if_icmpeq LBB1_8
; JVM-NEXT:    goto LBB1_19
; JVM-NEXT:  LBB1_19:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpeq LBB1_6
; JVM-NEXT:    goto LBB1_11
; JVM-NEXT:  LBB1_16:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 7
; JVM-NEXT:    if_icmpeq LBB1_7
; JVM-NEXT:    goto LBB1_17
; JVM-NEXT:  LBB1_17:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 8
; JVM-NEXT:    if_icmpeq LBB1_9
; JVM-NEXT:    goto LBB1_18
; JVM-NEXT:  LBB1_18:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 9
; JVM-NEXT:    if_icmpeq LBB1_10
; JVM-NEXT:    goto LBB1_11
; JVM-NEXT:  LBB1_1:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 44
; JVM-NEXT:    iload 44
; JVM-NEXT:    istore 45
; JVM-NEXT:    iload 45
; JVM-NEXT:    iadd
; JVM-NEXT:    istore 46
; JVM-NEXT:    iload 46
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 47
; JVM-NEXT:    iload 47
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_2:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 36
; JVM-NEXT:    iload 36
; JVM-NEXT:    istore 37
; JVM-NEXT:    iload 37
; JVM-NEXT:    imul
; JVM-NEXT:    istore 38
; JVM-NEXT:    iload 38
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 39
; JVM-NEXT:    iload 39
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_3:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 40
; JVM-NEXT:    iload 40
; JVM-NEXT:    istore 41
; JVM-NEXT:    iload 41
; JVM-NEXT:    isub
; JVM-NEXT:    istore 42
; JVM-NEXT:    iload 42
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 43
; JVM-NEXT:    iload 43
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_4:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 32
; JVM-NEXT:    iload 32
; JVM-NEXT:    istore 33
; JVM-NEXT:    iload 33
; JVM-NEXT:    idiv
; JVM-NEXT:    istore 34
; JVM-NEXT:    iload 34
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 35
; JVM-NEXT:    iload 35
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_5:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 28
; JVM-NEXT:    iload 28
; JVM-NEXT:    istore 29
; JVM-NEXT:    iload 29
; JVM-NEXT:    irem
; JVM-NEXT:    istore 30
; JVM-NEXT:    iload 30
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 31
; JVM-NEXT:    iload 31
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_6:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 18
; JVM-NEXT:    iload 18
; JVM-NEXT:    istore 19
; JVM-NEXT:    iload 19
; JVM-NEXT:    ior
; JVM-NEXT:    istore 20
; JVM-NEXT:    iload 20
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 21
; JVM-NEXT:    iload 21
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_7:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 12
; JVM-NEXT:    iload 12
; JVM-NEXT:    istore 13
; JVM-NEXT:    iload 13
; JVM-NEXT:    ixor
; JVM-NEXT:    istore 14
; JVM-NEXT:    iload 14
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 15
; JVM-NEXT:    iload 15
; JVM-NEXT:    istore 16
; JVM-NEXT:    iload 16
; JVM-NEXT:    iload 16
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 17
; JVM-NEXT:    iload 17
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_8:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 22
; JVM-NEXT:    iload 22
; JVM-NEXT:    istore 23
; JVM-NEXT:    iload 23
; JVM-NEXT:    iand
; JVM-NEXT:    istore 24
; JVM-NEXT:    iload 24
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 25
; JVM-NEXT:    iload 25
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_9:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 8
; JVM-NEXT:    iload 8
; JVM-NEXT:    istore 9
; JVM-NEXT:    iload 9
; JVM-NEXT:    ishr
; JVM-NEXT:    istore 10
; JVM-NEXT:    iload 10
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 11
; JVM-NEXT:    iload 11
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_10:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 3
; JVM-NEXT:    iload 3
; JVM-NEXT:    istore 4
; JVM-NEXT:    iload 4
; JVM-NEXT:    ishl
; JVM-NEXT:    istore 5
; JVM-NEXT:    iload 5
; JVM-NEXT:    i2c
; JVM-NEXT:    istore 6
; JVM-NEXT:    iload 6
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB1_12
; JVM-NEXT:  LBB1_11:
; JVM-NEXT:    ldc 0
; JVM-NEXT:    istore 7
; JVM-NEXT:  LBB1_12:
; JVM-NEXT:    iload 7
; JVM-NEXT:    istore 26
; JVM-NEXT:    iload 26
; JVM-NEXT:    istore 27
; JVM-NEXT:    iload 27
; JVM-NEXT:    ireturn
entry:
  switch i32 %Opcode, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb3
    i32 1, label %sw.bb7
    i32 3, label %sw.bb11
    i32 4, label %sw.bb15
    i32 6, label %sw.bb19
    i32 7, label %sw.bb23
    i32 5, label %sw.bb27
    i32 8, label %sw.bb31
    i32 9, label %sw.bb35
  ]

sw.bb:                                            ; preds = %entry
  %conv = sext i16 %arg1 to i32
  %conv1 = sext i16 %arg2 to i32
  %add = add nsw i32 %conv, %conv1
  %conv2 = trunc i32 %add to i16
  br label %return

sw.bb3:                                           ; preds = %entry
  %conv4 = sext i16 %arg1 to i32
  %conv5 = sext i16 %arg2 to i32
  %mul = mul nsw i32 %conv4, %conv5
  %conv6 = trunc i32 %mul to i16
  br label %return

sw.bb7:                                           ; preds = %entry
  %conv8 = sext i16 %arg1 to i32
  %conv9 = sext i16 %arg2 to i32
  %sub = sub nsw i32 %conv8, %conv9
  %conv10 = trunc i32 %sub to i16
  br label %return

sw.bb11:                                          ; preds = %entry
  %conv12 = sext i16 %arg1 to i32
  %conv13 = sext i16 %arg2 to i32
  %div = sdiv i32 %conv12, %conv13
  %conv14 = trunc i32 %div to i16
  br label %return

sw.bb15:                                          ; preds = %entry
  %conv16 = sext i16 %arg1 to i32
  %conv17 = sext i16 %arg2 to i32
  %rem = srem i32 %conv16, %conv17
  %conv18 = trunc i32 %rem to i16
  br label %return

sw.bb19:                                          ; preds = %entry
  %conv20 = sext i16 %arg1 to i32
  %conv21 = sext i16 %arg2 to i32
  %or = or i32 %conv20, %conv21
  %conv22 = trunc i32 %or to i16
  br label %return

sw.bb23:                                          ; preds = %entry
  %conv24 = sext i16 %arg1 to i32
  %conv25 = sext i16 %arg2 to i32
  %xor = xor i32 %conv24, %conv25
  %conv26 = trunc i32 %xor to i16
  br label %return

sw.bb27:                                          ; preds = %entry
  %conv28 = sext i16 %arg1 to i32
  %conv29 = sext i16 %arg2 to i32
  %and = and i32 %conv28, %conv29
  %conv30 = trunc i32 %and to i16
  br label %return

sw.bb31:                                          ; preds = %entry
  %conv32 = sext i16 %arg1 to i32
  %conv33 = sext i16 %arg2 to i32
  %shr = ashr i32 %conv32, %conv33
  %conv34 = trunc i32 %shr to i16
  br label %return

sw.bb35:                                          ; preds = %entry
  %conv36 = sext i16 %arg1 to i32
  %conv37 = sext i16 %arg2 to i32
  %shl = shl i32 %conv36, %conv37
  %conv38 = trunc i32 %shl to i16
  br label %return

sw.epilog:                                        ; preds = %entry
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb35, %sw.bb31, %sw.bb27, %sw.bb23, %sw.bb19, %sw.bb15, %sw.bb11, %sw.bb7, %sw.bb3, %sw.bb
  %retval.0 = phi i16 [ 0, %sw.epilog ], [ %conv38, %sw.bb35 ], [ %conv34, %sw.bb31 ], [ %conv30, %sw.bb27 ], [ %conv26, %sw.bb23 ], [ %conv22, %sw.bb19 ], [ %conv18, %sw.bb15 ], [ %conv14, %sw.bb11 ], [ %conv10, %sw.bb7 ], [ %conv6, %sw.bb3 ], [ %conv2, %sw.bb ]
  ret i16 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_Z5BinOpIlET_iS0_S0_(i32 %Opcode, i64 %arg1, i64 %arg2) #0  {
; JVM:       iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpgt LBB2_14
; JVM-NEXT:    goto LBB2_13
; JVM-NEXT:  LBB2_13:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpgt LBB2_21
; JVM-NEXT:    goto LBB2_20
; JVM-NEXT:  LBB2_20:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_0
; JVM-NEXT:    if_icmpeq LBB2_1
; JVM-NEXT:    goto LBB2_24
; JVM-NEXT:  LBB2_24:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpeq LBB2_3
; JVM-NEXT:    goto LBB2_11
; JVM-NEXT:  LBB2_21:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_2
; JVM-NEXT:    if_icmpeq LBB2_2
; JVM-NEXT:    goto LBB2_22
; JVM-NEXT:  LBB2_22:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_3
; JVM-NEXT:    if_icmpeq LBB2_4
; JVM-NEXT:    goto LBB2_23
; JVM-NEXT:  LBB2_23:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpeq LBB2_5
; JVM-NEXT:    goto LBB2_11
; JVM-NEXT:  LBB2_14:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpgt LBB2_16
; JVM-NEXT:    goto LBB2_15
; JVM-NEXT:  LBB2_15:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_5
; JVM-NEXT:    if_icmpeq LBB2_8
; JVM-NEXT:    goto LBB2_19
; JVM-NEXT:  LBB2_19:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpeq LBB2_6
; JVM-NEXT:    goto LBB2_11
; JVM-NEXT:  LBB2_16:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 7
; JVM-NEXT:    if_icmpeq LBB2_7
; JVM-NEXT:    goto LBB2_17
; JVM-NEXT:  LBB2_17:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 8
; JVM-NEXT:    if_icmpeq LBB2_9
; JVM-NEXT:    goto LBB2_18
; JVM-NEXT:  LBB2_18:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 9
; JVM-NEXT:    if_icmpeq LBB2_10
; JVM-NEXT:    goto LBB2_11
; JVM-NEXT:  LBB2_1:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    ladd
; JVM-NEXT:    lstore 29
; JVM-NEXT:    lload 29
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_2:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    lmul
; JVM-NEXT:    lstore 25
; JVM-NEXT:    lload 25
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_3:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    lsub
; JVM-NEXT:    lstore 27
; JVM-NEXT:    lload 27
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_4:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    ldiv
; JVM-NEXT:    lstore 23
; JVM-NEXT:    lload 23
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_5:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    lrem
; JVM-NEXT:    lstore 21
; JVM-NEXT:    lload 21
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_6:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    lor
; JVM-NEXT:    lstore 15
; JVM-NEXT:    lload 15
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_7:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    lxor
; JVM-NEXT:    lstore 13
; JVM-NEXT:    lload 13
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_8:
; JVM-NEXT:    lload 1
; JVM-NEXT:    lload 3
; JVM-NEXT:    land
; JVM-NEXT:    lstore 17
; JVM-NEXT:    lload 17
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_9:
; JVM-NEXT:    lload 3
; JVM-NEXT:    l2i
; JVM-NEXT:    istore 10
; JVM-NEXT:    lload 1
; JVM-NEXT:    iload 10
; JVM-NEXT:    lshr
; JVM-NEXT:    lstore 11
; JVM-NEXT:    lload 11
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_10:
; JVM-NEXT:    lload 3
; JVM-NEXT:    l2i
; JVM-NEXT:    istore 5
; JVM-NEXT:    lload 1
; JVM-NEXT:    iload 5
; JVM-NEXT:    lshl
; JVM-NEXT:    lstore 6
; JVM-NEXT:    lload 6
; JVM-NEXT:    lstore 8
; JVM-NEXT:    goto LBB2_12
; JVM-NEXT:  LBB2_11:
; JVM-NEXT:    ldc2_w 0
; JVM-NEXT:    lstore 8
; JVM-NEXT:  LBB2_12:
; JVM-NEXT:    lload 8
; JVM-NEXT:    lstore 19
; JVM-NEXT:    lload 19
; JVM-NEXT:    lreturn
entry:
  switch i32 %Opcode, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
    i32 1, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 6, label %sw.bb5
    i32 7, label %sw.bb6
    i32 5, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb9
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i64 %arg1, %arg2
  br label %return

sw.bb1:                                           ; preds = %entry
  %mul = mul nsw i64 %arg1, %arg2
  br label %return

sw.bb2:                                           ; preds = %entry
  %sub = sub nsw i64 %arg1, %arg2
  br label %return

sw.bb3:                                           ; preds = %entry
  %div = sdiv i64 %arg1, %arg2
  br label %return

sw.bb4:                                           ; preds = %entry
  %rem = srem i64 %arg1, %arg2
  br label %return

sw.bb5:                                           ; preds = %entry
  %or = or i64 %arg1, %arg2
  br label %return

sw.bb6:                                           ; preds = %entry
  %xor = xor i64 %arg1, %arg2
  br label %return

sw.bb7:                                           ; preds = %entry
  %and = and i64 %arg1, %arg2
  br label %return

sw.bb8:                                           ; preds = %entry
  %shr = ashr i64 %arg1, %arg2
  br label %return

sw.bb9:                                           ; preds = %entry
  %shl = shl i64 %arg1, %arg2
  br label %return

sw.epilog:                                        ; preds = %entry
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %retval.0 = phi i64 [ 0, %sw.epilog ], [ %shl, %sw.bb9 ], [ %shr, %sw.bb8 ], [ %and, %sw.bb7 ], [ %xor, %sw.bb6 ], [ %or, %sw.bb5 ], [ %rem, %sw.bb4 ], [ %div, %sw.bb3 ], [ %sub, %sw.bb2 ], [ %mul, %sw.bb1 ], [ %add, %sw.bb ]
  ret i64 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local signext i8 @_Z5BinOpIcET_iS0_S0_(i32 %Opcode, i8 signext %arg1, i8 signext %arg2) #0  {
; JVM:       iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpgt LBB3_14
; JVM-NEXT:    goto LBB3_13
; JVM-NEXT:  LBB3_13:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpgt LBB3_21
; JVM-NEXT:    goto LBB3_20
; JVM-NEXT:  LBB3_20:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_0
; JVM-NEXT:    if_icmpeq LBB3_1
; JVM-NEXT:    goto LBB3_24
; JVM-NEXT:  LBB3_24:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_1
; JVM-NEXT:    if_icmpeq LBB3_3
; JVM-NEXT:    goto LBB3_11
; JVM-NEXT:  LBB3_21:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_2
; JVM-NEXT:    if_icmpeq LBB3_2
; JVM-NEXT:    goto LBB3_22
; JVM-NEXT:  LBB3_22:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_3
; JVM-NEXT:    if_icmpeq LBB3_4
; JVM-NEXT:    goto LBB3_23
; JVM-NEXT:  LBB3_23:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_4
; JVM-NEXT:    if_icmpeq LBB3_5
; JVM-NEXT:    goto LBB3_11
; JVM-NEXT:  LBB3_14:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpgt LBB3_16
; JVM-NEXT:    goto LBB3_15
; JVM-NEXT:  LBB3_15:
; JVM-NEXT:    iload 0
; JVM-NEXT:    iconst_5
; JVM-NEXT:    if_icmpeq LBB3_8
; JVM-NEXT:    goto LBB3_19
; JVM-NEXT:  LBB3_19:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 6
; JVM-NEXT:    if_icmpeq LBB3_6
; JVM-NEXT:    goto LBB3_11
; JVM-NEXT:  LBB3_16:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 7
; JVM-NEXT:    if_icmpeq LBB3_7
; JVM-NEXT:    goto LBB3_17
; JVM-NEXT:  LBB3_17:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 8
; JVM-NEXT:    if_icmpeq LBB3_9
; JVM-NEXT:    goto LBB3_18
; JVM-NEXT:  LBB3_18:
; JVM-NEXT:    iload 0
; JVM-NEXT:    ldc 9
; JVM-NEXT:    if_icmpeq LBB3_10
; JVM-NEXT:    goto LBB3_11
; JVM-NEXT:  LBB3_1:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 44
; JVM-NEXT:    iload 44
; JVM-NEXT:    istore 45
; JVM-NEXT:    iload 45
; JVM-NEXT:    iadd
; JVM-NEXT:    istore 46
; JVM-NEXT:    iload 46
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 47
; JVM-NEXT:    iload 47
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_2:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 36
; JVM-NEXT:    iload 36
; JVM-NEXT:    istore 37
; JVM-NEXT:    iload 37
; JVM-NEXT:    imul
; JVM-NEXT:    istore 38
; JVM-NEXT:    iload 38
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 39
; JVM-NEXT:    iload 39
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_3:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 40
; JVM-NEXT:    iload 40
; JVM-NEXT:    istore 41
; JVM-NEXT:    iload 41
; JVM-NEXT:    isub
; JVM-NEXT:    istore 42
; JVM-NEXT:    iload 42
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 43
; JVM-NEXT:    iload 43
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_4:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 32
; JVM-NEXT:    iload 32
; JVM-NEXT:    istore 33
; JVM-NEXT:    iload 33
; JVM-NEXT:    idiv
; JVM-NEXT:    istore 34
; JVM-NEXT:    iload 34
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 35
; JVM-NEXT:    iload 35
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_5:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 28
; JVM-NEXT:    iload 28
; JVM-NEXT:    istore 29
; JVM-NEXT:    iload 29
; JVM-NEXT:    irem
; JVM-NEXT:    istore 30
; JVM-NEXT:    iload 30
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 31
; JVM-NEXT:    iload 31
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_6:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 18
; JVM-NEXT:    iload 18
; JVM-NEXT:    istore 19
; JVM-NEXT:    iload 19
; JVM-NEXT:    ior
; JVM-NEXT:    istore 20
; JVM-NEXT:    iload 20
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 21
; JVM-NEXT:    iload 21
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_7:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 12
; JVM-NEXT:    iload 12
; JVM-NEXT:    istore 13
; JVM-NEXT:    iload 13
; JVM-NEXT:    ixor
; JVM-NEXT:    istore 14
; JVM-NEXT:    iload 14
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 15
; JVM-NEXT:    iload 15
; JVM-NEXT:    istore 16
; JVM-NEXT:    iload 16
; JVM-NEXT:    iload 16
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 17
; JVM-NEXT:    iload 17
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_8:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 22
; JVM-NEXT:    iload 22
; JVM-NEXT:    istore 23
; JVM-NEXT:    iload 23
; JVM-NEXT:    iand
; JVM-NEXT:    istore 24
; JVM-NEXT:    iload 24
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 25
; JVM-NEXT:    iload 25
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_9:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 8
; JVM-NEXT:    iload 8
; JVM-NEXT:    istore 9
; JVM-NEXT:    iload 9
; JVM-NEXT:    ishr
; JVM-NEXT:    istore 10
; JVM-NEXT:    iload 10
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 11
; JVM-NEXT:    iload 11
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_10:
; JVM-NEXT:    iload 1
; JVM-NEXT:    iload 2
; JVM-NEXT:    istore 3
; JVM-NEXT:    iload 3
; JVM-NEXT:    istore 4
; JVM-NEXT:    iload 4
; JVM-NEXT:    ishl
; JVM-NEXT:    istore 5
; JVM-NEXT:    iload 5
; JVM-NEXT:    i2b
; JVM-NEXT:    istore 6
; JVM-NEXT:    iload 6
; JVM-NEXT:    istore 7
; JVM-NEXT:    goto LBB3_12
; JVM-NEXT:  LBB3_11:
; JVM-NEXT:    ldc 0
; JVM-NEXT:    istore 7
; JVM-NEXT:  LBB3_12:
; JVM-NEXT:    iload 7
; JVM-NEXT:    istore 26
; JVM-NEXT:    iload 26
; JVM-NEXT:    istore 27
; JVM-NEXT:    iload 27
; JVM-NEXT:    ireturn
entry:
  switch i32 %Opcode, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb3
    i32 1, label %sw.bb7
    i32 3, label %sw.bb11
    i32 4, label %sw.bb15
    i32 6, label %sw.bb19
    i32 7, label %sw.bb23
    i32 5, label %sw.bb27
    i32 8, label %sw.bb31
    i32 9, label %sw.bb35
  ]

sw.bb:                                            ; preds = %entry
  %conv = sext i8 %arg1 to i32
  %conv1 = sext i8 %arg2 to i32
  %add = add nsw i32 %conv, %conv1
  %conv2 = trunc i32 %add to i8
  br label %return

sw.bb3:                                           ; preds = %entry
  %conv4 = sext i8 %arg1 to i32
  %conv5 = sext i8 %arg2 to i32
  %mul = mul nsw i32 %conv4, %conv5
  %conv6 = trunc i32 %mul to i8
  br label %return

sw.bb7:                                           ; preds = %entry
  %conv8 = sext i8 %arg1 to i32
  %conv9 = sext i8 %arg2 to i32
  %sub = sub nsw i32 %conv8, %conv9
  %conv10 = trunc i32 %sub to i8
  br label %return

sw.bb11:                                          ; preds = %entry
  %conv12 = sext i8 %arg1 to i32
  %conv13 = sext i8 %arg2 to i32
  %div = sdiv i32 %conv12, %conv13
  %conv14 = trunc i32 %div to i8
  br label %return

sw.bb15:                                          ; preds = %entry
  %conv16 = sext i8 %arg1 to i32
  %conv17 = sext i8 %arg2 to i32
  %rem = srem i32 %conv16, %conv17
  %conv18 = trunc i32 %rem to i8
  br label %return

sw.bb19:                                          ; preds = %entry
  %conv20 = sext i8 %arg1 to i32
  %conv21 = sext i8 %arg2 to i32
  %or = or i32 %conv20, %conv21
  %conv22 = trunc i32 %or to i8
  br label %return

sw.bb23:                                          ; preds = %entry
  %conv24 = sext i8 %arg1 to i32
  %conv25 = sext i8 %arg2 to i32
  %xor = xor i32 %conv24, %conv25
  %conv26 = trunc i32 %xor to i8
  br label %return

sw.bb27:                                          ; preds = %entry
  %conv28 = sext i8 %arg1 to i32
  %conv29 = sext i8 %arg2 to i32
  %and = and i32 %conv28, %conv29
  %conv30 = trunc i32 %and to i8
  br label %return

sw.bb31:                                          ; preds = %entry
  %conv32 = sext i8 %arg1 to i32
  %conv33 = sext i8 %arg2 to i32
  %shr = ashr i32 %conv32, %conv33
  %conv34 = trunc i32 %shr to i8
  br label %return

sw.bb35:                                          ; preds = %entry
  %conv36 = sext i8 %arg1 to i32
  %conv37 = sext i8 %arg2 to i32
  %shl = shl i32 %conv36, %conv37
  %conv38 = trunc i32 %shl to i8
  br label %return

sw.epilog:                                        ; preds = %entry
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb35, %sw.bb31, %sw.bb27, %sw.bb23, %sw.bb19, %sw.bb15, %sw.bb11, %sw.bb7, %sw.bb3, %sw.bb
  %retval.0 = phi i8 [ 0, %sw.epilog ], [ %conv38, %sw.bb35 ], [ %conv34, %sw.bb31 ], [ %conv30, %sw.bb27 ], [ %conv26, %sw.bb23 ], [ %conv22, %sw.bb19 ], [ %conv18, %sw.bb15 ], [ %conv14, %sw.bb11 ], [ %conv10, %sw.bb7 ], [ %conv6, %sw.bb3 ], [ %conv2, %sw.bb ]
  ret i8 %retval.0
}

attributes #0 = { noinline uwtable}

